version: "3.9"

services:
  minio:
    hostname: minio
    image: "minio/minio"
    container_name: minio
    ports:
      - "9001:9001"
      - "9000:9000"
    env_file:
      - .env
    command: [ "server", "/data", "--console-address", ":9001" ]
    volumes:
      - ./minio:/data
    networks:
      - de

  mysql:
    image: mysql:8.0
    container_name: mysql
    hostname: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    env_file:
      - .env
    volumes:
      - ./mysql:/var/lib/mysql
#    restart: always

  postgresql:
    image: postgres:15
    container_name: postgresql
    hostname: postgresql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    restart: always

  jupyter:
    image: jupyter/all-spark-notebook:python-3.8
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter_data:/home/jovyan/work
    networks:
      - de
#    restart: always

  mc:
    image: minio/mc
    container_name: mc
    hostname: mc
    env_file:
      - .env
    entrypoint: >
      /bin/sh -c " until (/usr/bin/mc config host add minio
      http://minio:9000 minio minio123) do echo '...waiting...' && sleep 1;
      done; /usr/bin/mc mb minio/warehouse; /usr/bin/mc policy set public
      minio/warehouse; exit 0; "
    depends_on:
      - minio
    networks:
      - de

networks:
  de:
    driver: bridge
    name: de
